# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    # Hiérarchie des rôles uniquement et non l'exhaustivité
    role_hierarchy:  
        ROLE_ADMIN: ROLE_USER, ROLE_AUTEUR, ROLE_MODERATEUR
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded

    providers:
        in_memory:  # fournisseur d'utilisateur de notre pare-feu (firewalls)
            # memory: ~     # Origin
            memory:
                users:
                    user: { password: userpass, roles: ['ROLE_USER'] }
                    admin: { password: adminpass, roles: ['ROLE_ADMIN'] }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # main:                 # Origin
        #     anonymous: ~      # Origin
            # activate different ways to authenticate
        
        main_login:     #On crée un pare-feu uniquement pour le formulaire
            #Cette expression régulère permet de prendre /login (mais pas /login_check)
            pattern: ^/login$
            anonymous:  true  # On autorise les anonymes sur ce pare-feu 

        main:
            pattern:    ^/
            anonymous:  false
            form_login:
                login_path: login
                check_path: login_check
            logout:
                path: logout
                target: login

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }

        # permet é=mnt de sécuriser vos URL par IP ou canal (http ou https),
        # - { path: ^/admin, ip: 127.0.0.1, requires_channel: https }
        # - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
